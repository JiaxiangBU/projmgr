% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz-task-board.R
\name{viz_taskboard_linkedfile}
\alias{viz_taskboard_linkedfile}
\title{Save SVG of Agile-style task board of issue status with links to issues}
\usage{
viz_taskboard_linkedfile(g, filepath)
}
\arguments{
\item{g}{ggplot2 object returned by \code{viz_gantt_closed()}}

\item{filepath}{Location to save resulting SVG file of ggplot2}
}
\value{
Writes SVG to file and also returns the body so that is can be easily put
    into an RMarkdown (with use of the \code{results = 'asis'}) chunk option
}
\description{
This function creates the same plot as \code{viz_taskboard} then edits the
underlying XML so that the "cards" are linked to the corresponding issues on GitHub.
It saves a file with the reuslting SVG, which can then be read into an RMarkdown
HTML document as shown in the Examples.
}
\details{
Credit goes to this Stack Overflow answer for figuring out how to do this:
https://stackoverflow.com/questions/42259826/hyperlinking-text-in-a-ggplot2-visualization/42262407
}
\examples{
\dontrun{
# In R:
viz_taskboard_linkedfile(issues, "my_folder/my_file")

# In RMarkdown knitting to HTML:
```{r results = 'asis', echo = FALSE}
cat(readLines("my_folder/my_file"), sep = "\\n")
````
}
}
\seealso{
Other issues: \code{\link{get_issues_events}},
  \code{\link{get_issues}},
  \code{\link{parse_issue_events}},
  \code{\link{parse_issues}}, \code{\link{post_issue}},
  \code{\link{viz_gantt_closed_linkedfile}},
  \code{\link{viz_gantt_closed}},
  \code{\link{viz_taskboard}}
}
\concept{issues}
