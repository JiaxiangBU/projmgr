% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plan_todo.R
\name{read_plan_todo_yaml}
\alias{read_plan_todo_yaml}
\title{Read plan or to-do list from YAML}
\usage{
read_plan_todo_yaml(filepath = NA, chars = NA)
}
\arguments{
\item{filepath}{Filepath of YAML file. Either this or \code{chars} is required.}

\item{chars}{Character object containing YAML. Either this or \code{chars} in required.}
}
\value{
List containing plan compatible with \code{tidytracker::post_plan} or |code{tidytracker::post_todo}
}
\description{
This function reads a carefully constructed YAML file representing a project plan (of
milestones and issues) or a to-do list (of issues). YAML is converted into an R list
structure which can then be passed to \code{tidytracker::post_plan} or \code{tidytracker::post_todo}
to build infrastructure for your repository.
}
\details{
Please see the "Building Custom Plans" vignette for more details.
}
\examples{
\dontrun{
# This example uses example file included in pkg
# You should be able to run example as-is after creating your own repo reference
file_path <- system.file("extdata", "plan_yaml.txt", package = "tidytracker", mustWork = TRUE)
my_plan <- read_plan_todo_yaml(file_path)
post_plan(ref, my_plan)
}
\dontrun{
# This example uses example file included in pkg
# You should be able to run example as-is after creating your own repo reference
file_path <- system.file("extdata", "plan_yaml.txt", package = "tidytracker", mustWork = TRUE)
my_todo <- read_plan_todo_yaml(file_path)
post_todo(ref, my_todo)
}
}
\seealso{
Other plans and todos: \code{\link{post_plan}},
  \code{\link{post_todo}}
}
\concept{plans and todos}
